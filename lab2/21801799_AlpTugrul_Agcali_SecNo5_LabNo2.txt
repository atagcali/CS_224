CS224
Lab No 2
Section No 5
Alp Tuğrul Ağçalı
21801799
Date 4.03.2022


	.text		
	.globl __start
 
__start:
	
	jal createArray
	move $a0, $v0
	move $a1, $v1
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	
	jal bubbleSort
	lw $a0, 0($sp)
	jal printarray
	
	la $a0, endl
	li $v0, 4
	syscall
	
	lw $a0, 0($sp)
	jal processSortedArray	
	addi $sp, $sp, 4
	li $v0, 10
	syscall
	 










#------------------------------------------------------------------
createArray:
	la $a0, askSize		# Ask size of array
	li $v0, 4		
	syscall

	li $v0, 5		
	syscall
	
	move $s0, $v0		# s0 = size of array
	sll $s0, $s0, 2 
	
	move $a0, $v0
	li $v0, 9  		# allocate dynamic memory
	syscall
	
	move $v1, $v0  		# v1 = adress of array
	
	srl $s0, $s0, 2 
	add $s1, $0, $0	# s1 = i
	addi $sp, $sp, -4
	sw $v1, 0($sp) 
	  
	j loopcheck
	loop:
		la, $a0, askElement
		li $v0, 4
		syscall
		
		li $v0, 5
		syscall
		
		move $s2, $v0		# s2 = new element
		sw $s2, 0($v1)   	# element gets in array
		
		addi $s1, $s1, 1
		addi $v1, $v1, 4
		
	loopcheck: blt $s1, $s0, loop
	
	lw $v0, 0($sp)		# v0 = adress of array
	move $v1, $s0 		# v1 = size of array
	
	jr $ra



bubbleSort: 			# a0 = array address, a1 = array size
	li $s0, 1		# s0 = element which is being checked
	addi $sp, $sp, -4
	sw $a0, 0($sp)
	j loopcheck1
	loop1:
		lw $a0, 0($sp)
		li $s1, 1
		sub $s2, $a1, $s0		# (a1-s0) = element to be compared		
		j loopcheck2
		loop2:
			lw $s6, 0($a0)
			lw $s7, 4($a0)
			bgt $s6, $s7, swap
			j sorted
			swap: 
				sw $s6, 4($a0)
				sw $s7, 0($a0)
			sorted:
			addi $a0, $a0, 4
			addi $s1, $s1, 1				
		loopcheck2: ble, $s1, $s2, loop2
		addi $s0, $s0, 1		
	loopcheck1: blt $s0, $a1, loop1
	
	lw $a0, 0($sp)
	addi $sp, $sp, 4
	jr $ra



printarray:
	la $s7, 0($a0)
	la $a0, printArray			# output
	li $v0, 4
	syscall
	li $s0, 1
	li $s1, 2
	j loopcheck3
	loop3:
		lw $a0, 0($s7)
		li $v0, 1
		syscall 
		beq $s0, $a1, pass  	#add ", " 
		la $a0, comma
		li $v0, 4
		syscall
		pass:
		addi $s0, $s0, 1
		addi $s7, $s7, 4
	loopcheck3: ble $s0, $a1, loop3
	
	jr $ra
	
	
processSortedArray:
	li $s0, 1 	# i = 1
	la $s7, 0($a0)
	addi $sp, $sp, -4 
	sw $ra, 4($sp)
	j loopcheck4
	loop4:
		move $a0, $s0		# print the position		
		li $v0, 1
		syscall
		
		la $a0, space		# space
		li $v0, 4
		syscall
		
		lw $a0, 0($s7)
		li $v0, 1
		syscall
		
		la $a0, space		# space
		li $v0, 4
		syscall
		
		move $a0, $s7
		jal sumDigits
		move $a0, $v0
		li $v0, 1
		syscall
		
		beq $s0, $a1, pass1  	#add ", " 
		la $a0, comma
		li $v0, 4
		syscall
		pass1:
		
		la $a0, endl
		li $v0, 4
		syscall
		addi $s0, $s0, 1
		addi $s7, $s7, 4
		
	loopcheck4:ble $s0, $a1, loop4
	lw $ra, 4($sp)	
	jr $ra	
	
sumDigits:
	li $v0, 0
	lw $s6, 0($a0)
	abs $s6, $s6
	li $s5, 10
	li $s4, 1
	j loopcheck5
	loop5:	
		div $s6, $s5
		mflo $s4
		move $s6, $s4
		mfhi $s3		
		add $v0, $v0, $s3
	loopcheck5: bne $s4, $0, loop5

	jr $ra
	
	
	
	
	.data
askSize:	.asciiz "Please enter the size of array. "
askElement:	.asciiz "Please enter the number. "	
printArray: 	.asciiz "the sorted array is "
comma: 		.asciiz ", "
space: 		.asciiz "  "
endl: 		.asciiz "\n"
